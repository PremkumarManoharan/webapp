name: Packer-Build

on:
  pull_request:
    types: 
      - closed

jobs:
  # integration-test:
  #       if: ${{github.event.pull_request.merged}}
  #       runs-on: ubuntu-latest
  #       steps:
  #         - name: Update Ubuntu
  #           run: sudo apt update
  
  #         - uses: actions/checkout@v2

  #         - name: Use Node.js ${{ matrix.node-version }}
  #           uses: actions/setup-node@v2
  #           with:
  #             node-version: ${{ matrix.node.version }}

  #         - name: Install PostgresSQL
  #           run: sudo apt install -y postgresql-14 postgresql-client-14
        
  #         - name: Enable postgresql service
  #           run: sudo systemctl enable postgresql

  #         - name: Start PostgreSQL database
  #           run: sudo systemctl start postgresql
          
  #         - name: Create a service account (postgres user)
  #           run: |
  #             sudo -u postgres psql -c "CREATE USER ${{ secrets.PG_USER }} WITH PASSWORD '${{ secrets.PG_PASSWORD }}';"
  #             sudo -u postgres psql -c "ALTER USER ${{ secrets.PG_USER }} CREATEDB;"
        
          
  #         - name: Create the .env file and write the environment variables to it
  #           run: |
  #             cat << EOF > .env
  #             PG_USER=${{ secrets.PG_USER }}
  #             PG_PASSWORD=${{ secrets.PG_PASSWORD }}
  #             PG_DB=${{ secrets.PG_DB }}
  #             PG_HOST=${{ secrets.PG_HOST }}
  #             EOF
  #             echo ".env file created with the specified content."
              
  #         - name: Install node dependencies
  #           run: npm install
              
  #         - name: Run Integration tests
  #           run: npm test
  

  # packer-build:
  #       needs: integration-test
  #       runs-on: ubuntu-latest
  #       steps:
  #       - name: Update Ubuntu
  #         run: sudo apt update

  #       - uses: actions/checkout@v2

  #       - name: Setup packer
  #         uses: hashicorp/setup-packer@main

  #       - name: 'Google Auth'
  #         uses: 'google-github-actions/auth@v2'
  #         with:
  #           credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
    
  #       - name: 'Set up Cloud SDK'
  #         uses: 'google-github-actions/setup-gcloud@v2'
    
  #       - name: 'Use gcloud CLI'
  #         run: 'gcloud info'
        
  #       - name: Zip All Content
  #         run: |
  #           zip -r build.zip .

  #       - name: Run packer init
  #         run: "packer init ./packer/appBuildImage.pkr.hcl"
        
  #       - name: Run packer build
  #         run: packer build -var-file=packer/variables.pkrvars.hcl packer/
  

  instance-template-build:
        # needs: packer-build
        env:
          TIMESTAMP: ${{ github.run_id }}
        runs-on: ubuntu-latest
        steps:
        - name: Update Ubuntu
          run: sudo apt update  
        - uses: actions/checkout@v2
        - name: Setup packer
          uses: hashicorp/setup-packer@main 
        - name: 'Google Auth'
          uses: 'google-github-actions/auth@v2'
          with:
            credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
          
        - name: 'Set up Cloud SDK'
          uses: 'google-github-actions/setup-gcloud@v2'
          
        - name: 'Use gcloud CLI'
          run: 'gcloud info'
          
        - name: Fetch secrets from Secret Manager
          run: |
            gcloud secrets versions access latest --secret="dbhostname" > dbhostname.txt
            gcloud secrets versions access latest --secret="dbpassword" > dbpassword.txt
    
        - name: Create Startup Script
          run: |
            cat <<EOF > startup_script.sh
            #!/bin/bash
            ENV_FILE="/opt/app/.env"
            
            # Check if .env file already exists
            if [ ! -f "$ENV_FILE" ]; then
              # Create .env file
              cat <<EOL > "$ENV_FILE"
              PG_HOST=$(<dbhostname.txt)
              PG_USER=webapp
              PG_PASSWORD=$(<dbpassword.txt)
              PG_DB=webapp
              TOPIC_EMAIL=csye6225-send-verify-email
            EOL
              touch /opt/app/start.txt
            fi
            EOF
            chmod +x startup_script.sh
    
        - name: Create Compute Instance Template
          run: |
            TEMPLATE_NAME="appserver-${{ github.run_number }}"
            echo "TEMPLATE_NAME=$TEMPLATE_NAME" >> $GITHUB_ENV
            gcloud compute instance-templates create "$TEMPLATE_NAME" \
                --tags="webapp-server" \
                --machine-type="e2-medium" \
                --image-family="csye6225-webapp" \
                --image-project="csye-6225-dev-413816" \
                --boot-disk-size=100GB \
                --boot-disk-type="pd-balanced" \
                --boot-disk-kms-key="projects/csye-6225-dev-413816/locations/us-east1/keyRings/my-key-ring-1/cryptoKeys/webapp-kms-key-1" \
                --subnet="projects/csye-6225-dev-413816/regions/us-east1/subnetworks/webapp" \
                --network-tier="STANDARD" \
                --service-account="webapp-vm-service-account@csye-6225-dev-413816.iam.gserviceaccount.com" \
                --scopes="cloud-platform" \
                --metadata-from-file=startup-script=startup_script.sh
          
        - name: Start Rolling Update
          run: |
              gcloud compute instance-groups managed rolling-action start-update "webapp-igm" \
                    --version template=${{ env.TEMPLATE_NAME }} \
                    --zone=us-east1
            