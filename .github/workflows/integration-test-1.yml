name: Create-account-test

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [21.6.1]
        steps:
        - uses: actions/checkout@v2
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v2
          with:
            node-version: ${{ matrix.node.version }}
        - name: Update Ubuntu
          run: sudo apt update

        - name: Install PostgresSQL
          run: sudo apt install -y postgresql-14 postgresql-client-14
        
        - name: Enable postgresql service
          run: sudo systemctl enable postgresql

        - name: Start PostgreSQL database
          run: sudo systemctl start postgresql
        
        - name: Test env variables from secrets
          run: | 
            echo $PG_DB
        
        
        - name: Create a service account (postgres user)
          run: |
            sudo -u postgres psql -c "CREATE USER ${{ secrets.PG_USER }} WITH PASSWORD '${{ secrets.PG_PASSWORD }}';"
            sudo -u postgres psql -c "ALTER USER ${{ secrets.PG_USER }} CREATEDB;"
        
        - name: Start PostgreSQL database
          run: sudo systemctl start postgresql
        
        - name: Create the .env file and write the environment variables to it
          run: |
            cat << EOF > .env
            PG_USER=${{ secrets.PG_USER }}
            PG_PASSWORD=${{ secrets.PG_PASSWORD }}
            PG_DB=${{ secrets.PG_DB }}
            PG_HOST=${{ secrets.PG_HOST }}
            EOF
            echo ".env file created with the specified content."
            
        - name: Install node dependencies
          run: npm install
            
        - name: Run the application
          run: node server.js
        
        - name: Deploy Stage
          uses: fjogeleit/http-request-action@v1
          id: createUser
          with:
            url: 'http://localhost:3000'
            method: 'POST'
            customHeaders: '{"Content-Type": "application/json"}'
            data: '{
              "first_name": "prem",
              "last_name": "kumar",
              "password": "prem123",
              "username": "prem@gmail.com"}'
            
        - name: Show Response
          run: |
            echo ${{ steps.createUser.outputs.response }}
            echo ${{ steps.createUser.outputs.headers }}
            echo ${{ fromJson(steps.createUser.outputs.response).first_name }}
      
        - name: Stop the Server
          run: |
            SERVER_PID=$(lsof -i:3000 -t)
            sudo kill $SERVER_PID
